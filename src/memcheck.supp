# Suppress warnings produced by Valgrind.
# http://wiki.wxwidgets.org/Valgrind_Suppression_File_Howto
{
   # This warning is due to a memory-leak bug in the g++ compiler.
   # Soonho reported the problem. Gcc team said this a known problem, and will be fixed
   # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=58142
   Suppress_GCC-4.8_Memory_Leak_Bug_in_Thread1
   Memcheck:Leak
   fun:*nothrow_t
   fun:*_thread_atexit
   fun:*
   fun:*
   fun:*_Bind_simple*_invoke*_Index_tuple*
   fun:*_Bind_simple*
   fun:*_Bind_simple*
   obj:*/libstdc++.so*
   fun:start_thread
   fun:clone
}

{
   # This warning is due to a memory-leak bug in the g++ compiler.
   # Soonho reported the problem. Gcc team said this a known problem, and will be fixed
   # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=58142
   Suppress_GCC-4.8_Memory_Leak_Bug_in_Thread2
   Memcheck:Leak
   fun:*nothrow_t
   fun:*_thread_atexit
   fun:*
   obj:*/libstdc++.so*
   fun:start_thread
   fun:clone
}

{
   # This warning is due to a memory-leak bug in the g++ compiler.
   # Soonho reported the problem. Gcc team said this a known problem, and will be fixed
   # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=58142
   Suppress_GCC-4.8_Memory_Leak_Bug_in_Thread3
   Memcheck:Leak
   fun:*nothrow_t
   fun:*_thread_atexit
   fun:*
   fun:*_Bind_simple*
   obj:*/libstdc++.so*
   fun:start_thread
   fun:clone
}

{
   # This warning is due to a memory-leak bug in the g++ compiler.
   # Soonho reported the problem. Gcc team said this a known problem, and will be fixed
   # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=58142
   Suppress_GCC-4.8_Memory_Leak_Bug_in_Thread_32Bit_Ubuntu
   Memcheck:Leak
   fun:*nothrow_t
   fun:*_thread_atexit
   fun:*
   fun:*_Bind_simple*
   fun:*_Bind_simple*
   fun:*_Bind_simple*
   obj:*/libstdc++.so*
   fun:clone
}

{
   Suppress_Bash_Memory_Leak_on_Fedora19
   Memcheck:Leak
   fun:malloc
   fun:xmalloc
   fun:make_if_command
   fun:yyparse
   fun:parse_command
   fun:read_command
   fun:reader_loop
   fun:main
}

{
   # This entry suppresses the warning caused by a bug in tcmalloc-2.0.
   # Using tcmalloc-2.1 solves this problem. 
   TCMalloc_2.0_Bug
   Memcheck:Param
   msync(start)
   fun:__msync_nocancel
   obj:*/libunwind.so.8.0.0
   obj:*/libunwind.so.8.0.0
   obj:*/libunwind.so.8.0.0
   obj:*/libunwind.so.8.0.0
   fun:_UL*_step
   fun:*GetStackTrace*
   fun:*PageHeap*GrowHeap*
   fun:*PageHeap*New*
   fun:*CentralFreeList*Populate*
   fun:*CentralFreeList*FetchFromSpansSafe*
   fun:*CentralFreeList11RemoveRange*
   fun:*ThreadCache*FetchFromCentralCache*
   fun:malloc
   fun:*TCMallocGuard*
   obj:*/libtcmalloc.so.*
   fun:call_init.*
   fun:_dl_init
   obj:*/ld-2.*
}
