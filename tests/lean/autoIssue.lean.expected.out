A.a' : ∀ (self : A), self.x = 1
z : A
this : z.x = 1
⊢ z.x = 1
z : A
this : z.x = 1
⊢ z.x = 1
@A.rec : {motive : A → Sort u_1} → ((x : Nat) → x = 1 → motive (A.mk x)) → (t : A) → motive t
case mk
x : Nat
a' : x = 1
⊢ (A.mk x).x = 1
case mk
x : Nat
a' : x = 1
⊢ (A.mk x).x = 1
case mk
x y : Nat
⊢ { x := x, y := y } = { x := { x := x, y := y }.x, y := { x := x, y := y }.y }
a.1 = 1
