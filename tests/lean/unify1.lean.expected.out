id (?m_m_1 ++ ?m_m_2) =?= [1, 2] ++ [3, 4]
id ([1, 2] ++ [3, 4]) =?= [1, 2] ++ [3, 4]
success
?m_m_1 ++ ?m_m_2 =?= id ([1, 2] ++ [3, 4])
[1, 2] ++ [3, 4] =?= id ([1, 2] ++ [3, 4])
success
?m_m_1 ++ ?m_m_2 =?= ID ([1, 2] ++ [3, 4])
[1, 2] ++ [3, 4] =?= ID ([1, 2] ++ [3, 4])
success
?m_m_1 ++ ?m_m_2 =?= ID (ID ([1, 2] ++ [3, 4]))
[1, 2] ++ [3, 4] =?= ID (ID ([1, 2] ++ [3, 4]))
success
ID (?m_m_1 ++ ?m_m_2) =?= ID ([1, 2] ++ [3, 4])
ID ([1, 2] ++ [3, 4]) =?= ID ([1, 2] ++ [3, 4])
success
ID (?m_m_1 ++ ?m_m_2) =?= [1, 2] ++ [3, 4]
ID ([1, 2] ++ [3, 4]) =?= [1, 2] ++ [3, 4]
success
[1] ++ [2, 3, 4] =?= [1, 2] ++ [3, 4]
[1] ++ [2, 3, 4] =?= [1, 2] ++ [3, 4]
success
y1 :: ?m_m_1 ++ ?m_m_2 =?= let l := [y1] in l ++ [y2]
[y1] ++ [y2] =?= let l := [y1] in l ++ [y2]
success
