x y : Nat
⊢ x + y = Nat.add y x
x y : Nat
⊢ x + y = Nat.add y x
x y : Nat
⊢ Nat.add x y = Nat.add y x
x y : Nat
⊢ f x (Nat.add x y) y = y + x
x y : Nat
⊢ x + y
case h.h
a b : Nat
⊢ 0 + a + b
a b : Nat
⊢ a + b
case h.h
a b : Nat
⊢ 0 + a + b
case h
p : Nat → Prop
h : ∀ (a : Nat), p a
x : Nat
⊢ p (id (0 + x))
p : Nat → Prop
h : ∀ (a : Nat), p a
x : Nat
⊢ id (0 + x)
p : Nat → Prop
h : ∀ (a : Nat), p a
x : Nat
⊢ 0 + x
