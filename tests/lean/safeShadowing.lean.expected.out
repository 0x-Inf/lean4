fun (a : α) => a : α → α
fun {α : Sort u_1} (a : α) => a : {α : Sort u_1} → α → α
fun (x x : Nat) => x : Nat → Nat → Nat
def f : Nat → Nat → Nat :=
fun (x x : Nat) =>
  match x with 
  | 0 => x + 1
  | Nat.succ x_1 => x + 2
fun {α_1 : Sort u_1} (a : α_1) => a : {α_1 : Sort u_1} → α_1 → α_1
fun (x x_1 : Nat) => x_1 : Nat → Nat → Nat
def f : Nat → Nat → Nat :=
fun (x x_1 : Nat) =>
  match x_1 with 
  | 0 => x_1 + 1
  | Nat.succ x_2 => x_1 + 2
