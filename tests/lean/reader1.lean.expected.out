result: 
[(module [(prelude "prelude")] [] []) (eoi "")]
result: 
[(module [] [(import "import" [(import_path [] me)])] []) (eoi "")]
error at line 1, column 0:
expected command
partial syntax tree:
[(module [] [] []) (eoi "")]
error at line 1, column 6:
expected "." or identifier
partial syntax tree:
[(module
  []
  [(import "import" [(import_path [] <missing>) <missing>]) <missing>]
  <missing>)
 (eoi "")]
result: 
[(module
  [(prelude "prelude")]
  [(import "import" [(import_path ["." "."] a) (import_path [] b)])
   (import "import" [(import_path [] c)])]
  [])
 (eoi "")]
result: 
[(module
  []
  []
  [(open "open" [(open_spec me [] [] [] []) (open_spec you [] [] [] [])])])
 (eoi "")]
result: 
[(module
  []
  []
  [(open
    "open"
    [(open_spec
      me
      [(open_spec.as "as" you)]
      [(open_spec.only ["(" a] [b c] ")")]
      [(open_spec.renaming
        ["(" "renaming"]
        [(open_spec.renaming.item a "->" b) (open_spec.renaming.item c "->" d)]
        ")")]
      [(open_spec.hiding "(" "hiding" [a b] ")")])])])
 (eoi "")]
error at line 1, column 8:
expected command
partial syntax tree:
[(module [] [] [(open "open" [(open_spec me [] [] [] [])])]) (eoi "")]
error at line 1, column 5:
expected identifier
error at line 1, column 9:
expected identifier
partial syntax tree:
[(module
  []
  []
  [(open
    "open"
    [(open_spec <missing> <missing> <missing> <missing> <missing>) <missing>])
   (open
    "open"
    [(open_spec <missing> <missing> <missing> <missing> <missing>) <missing>])])
 (eoi "")]
error at line 1, column 8:
expected command
partial syntax tree:
[(module
  []
  []
  [(open "open" [(open_spec me [] [] [] [])])
   (open "open" [(open_spec you [] [] [] [])])])
 (eoi "")]
result: 
[(module
  []
  []
  [(open "open" [(open_spec a [] [] [] [])])
   (section
    "section"
    [b]
    [(open "open" [(open_spec c [] [] [] [])])
     (section "section" [d] [(open "open" [(open_spec e [] [] [] [])])] "end" [d])]
    "end"
    [b])])
 (eoi "")]
result: 
[(module [] [] [(section "section" [a] [] "end" [])]) (eoi "")]
result: 
[(module
  []
  []
  [(notation
    "notation"
    (notation_spec
     (1
      (notation_spec.rules
       []
       [(rule (notation_symbol (0 (notation_quoted_symbol "`" "Prop" "`" []))) [])])))
    ":="
    (hole "_"))])
 (eoi "")]
result: 
[(mixfix
  (mixfix.kind (0 "prefix"))
  (notation_symbol
   (0 (notation_quoted_symbol "`" "+" "`" [(prec ":" (base10_lit "10"))])))
  ":="
  (hole "_"))
 (eoi "")]
(notation
 "notation"
 (notation_spec
  (1
   (notation_spec.rules
    []
    [(rule
      (notation_symbol
       (0 (notation_quoted_symbol "`" "+" "`" [(prec ":" (base10_lit "10"))])))
      [(transition (2 (argument b [(action ":" (action_kind (0 (base10_lit "10"))))])))])])))
 ":="
 (hole "_"))
notation`+`:10 b:10 :=_
error at line 10, column 19:
expected "_"
error at line 11, column 26:
expected "_"
error at line 85, column 0:
expected command
partial syntax tree:
[(module
  [(prelude "prelude")]
  []
  [(notation
    "notation"
    (notation_spec
     (1
      (notation_spec.rules
       []
       [(rule (notation_symbol (0 (notation_quoted_symbol "`" "Prop" "`" []))) [])])))
    ":="
    (hole <missing>))
   (notation
    "notation"
    (notation_spec
     (1
      (notation_spec.rules
       [f]
       [(rule
         (notation_symbol
          (0 (notation_quoted_symbol "`" "$ " "`" [(prec ":" (base10_lit "1"))])))
         [(transition (2 (argument a [(action ":" (action_kind (0 (base10_lit "0"))))])))])])))
    ":="
    (hole <missing>))
   (reserve_mixfix
    ["reserve" (mixfix.kind (0 "prefix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "¬" "`" [(prec ":" (base10_lit "40"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (0 "prefix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "~" "`" [(prec ":" (base10_lit "40"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (3 "infixr"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "∧ " "`" [(prec ":" (base10_lit "35"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (3 "infixr"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "/\\ " "`" [(prec ":" (base10_lit "35"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (3 "infixr"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "\\/ " "`" [(prec ":" (base10_lit "30"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (3 "infixr"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "∨ " "`" [(prec ":" (base10_lit "30"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "<-> " "`" [(prec ":" (base10_lit "20"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "↔ " "`" [(prec ":" (base10_lit "20"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "= " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "== " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "≠ " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "≈ " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "~ " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "≡ " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (2 "infixl"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "⬝ " "`" [(prec ":" (base10_lit "75"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (3 "infixr"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "▸ " "`" [(prec ":" (base10_lit "75"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (3 "infixr"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "▹ " "`" [(prec ":" (base10_lit "75"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (3 "infixr"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "⊕ " "`" [(prec ":" (base10_lit "30"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (3 "infixr"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "× " "`" [(prec ":" (base10_lit "35"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (2 "infixl"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "+ " "`" [(prec ":" (base10_lit "65"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (2 "infixl"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "- " "`" [(prec ":" (base10_lit "65"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (2 "infixl"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "* " "`" [(prec ":" (base10_lit "70"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (2 "infixl"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "/ " "`" [(prec ":" (base10_lit "70"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (2 "infixl"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "% " "`" [(prec ":" (base10_lit "70"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (2 "infixl"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "%ₙ " "`" [(prec ":" (base10_lit "70"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (0 "prefix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "-" "`" [(prec ":" (base10_lit "100"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (3 "infixr"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "^ " "`" [(prec ":" (base10_lit "80"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (3 "infixr"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "∘ " "`" [(prec ":" (base10_lit "90"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "<= " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "≤ " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "< " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" ">= " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "≥ " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "> " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (0 "prefix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "!" "`" [(prec ":" (base10_lit "40"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (2 "infixl"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "&& " "`" [(prec ":" (base10_lit "35"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (2 "infixl"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "|| " "`" [(prec ":" (base10_lit "30"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "∈ " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "∉ " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (2 "infixl"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "∩ " "`" [(prec ":" (base10_lit "70"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (2 "infixl"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "∪ " "`" [(prec ":" (base10_lit "65"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "⊆ " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "⊇ " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "⊂ " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "⊃ " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "\\ " "`" [(prec ":" (base10_lit "70"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (1 "infix"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "∣ " "`" [(prec ":" (base10_lit "50"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (2 "infixl"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "++ " "`" [(prec ":" (base10_lit "65"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (3 "infixr"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" ":: " "`" [(prec ":" (base10_lit "67"))]))))
   (reserve_mixfix
    ["reserve" (mixfix.kind (2 "infixl"))]
    (notation_symbol
     (0 (notation_quoted_symbol "`" "; " "`" [(prec ":" (base10_lit "1"))]))))
   (universes "universes" [u v w])])
 (eoi "")]
